name: ML Pipeline Workflow

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # Daily schedule for retrain-deploy workflow

jobs:
  install-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Check Python version
        run: python3 --version

      - name: Check Pip version
        run: pip3 --version

      - name: Create .env file containing secrets
        run: |
          cat <<- EOFenv
          DEPLOY_SERVER_HOSTNAME=${{ secrets.DEPLOY_SERVER_HOSTNAME }}
          DEPLOY_SERVER_USERNAME=${{ secrets.DEPLOY_SERVER_USERNAME }}
          DEPLOY_SERVER_PASSWORD=${{ secrets.DEPLOY_SERVER_PASSWORD }}
          DEPLOY_SERVER_PATH=${{ secrets.DEPLOY_SERVER_PATH }}
          EOF

      - name: Install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Build the model
        run: |
          source venv/bin/activate
          python3 ./ml/1_build.py

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: |
            venv
            ml
            .env
            abilities

  train:
    runs-on: ubuntu-latest
    needs: install-build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Train the model
        run: |
          source venv/bin/activate
          python3 ./ml/2_train.py

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: ml

  test:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Test the model
        run: |
          source venv/bin/activate
          python3 ./ml/3_test.py

  retrain:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Retrain the model
        run: |
          source venv/bin/activate
          python3 ./ml/6_retrain.py

      - name: Run on fail status
        if: failure()
        run: echo "I am the result of the above failed job"

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: ml

  package:
    runs-on: ubuntu-latest
    needs: [test, retrain]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Package the model
        run: |
          source venv/bin/activate
          python3 ./ml/4_package.py

  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Deploy the model
        run: |
          source venv/bin/activate
          python3 ./ml/5_deploy.py

  test-deployment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Wait 5 seconds
        run: sleep 5

      - name: Test the deployed model
        run: |
          source venv/bin/activate
          python3 ./ml/7_test_deployed_model.py
